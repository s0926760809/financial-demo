{{- if .Values.configMaps.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "fintech-chart.fullname" . }}-config
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "fintech-chart.labels" . | nindent 4 }}
data:
  database_url: {{ .Values.configMaps.data.database_url | quote }}
  redis_url: {{ .Values.configMaps.data.redis_url | quote }}
  log_level: {{ .Values.configMaps.data.log_level | quote }}
  cors_origins: {{ .Values.configMaps.data.cors_origins | quote }}
  api_rate_limit: {{ .Values.configMaps.data.api_rate_limit | quote }}
  session_timeout: {{ .Values.configMaps.data.session_timeout | quote }}
---
# Nginx Configuration for Frontend
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "fintech-chart.fullname" . }}-nginx-config
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "fintech-chart.labels" . | nindent 4 }}
    app.kubernetes.io/component: frontend
data:
  default.conf: |
    server {
        listen 80;
        server_name _;
        root /usr/share/nginx/html;
        index index.html index.htm;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

        # API proxy to trading service
        location /api/trading/ {
            proxy_pass http://{{ include "fintech-chart.trading-api.name" . }}:{{ .Values.backend.tradingApi.port }}/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # API proxy to risk engine
        location /api/risk/ {
            proxy_pass http://{{ include "fintech-chart.risk-engine.name" . }}:{{ .Values.backend.riskEngine.port }}/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # API proxy to payment gateway
        location /api/payment/ {
            proxy_pass http://{{ include "fintech-chart.payment-gateway.name" . }}:{{ .Values.backend.paymentGateway.port }}/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # API proxy to audit service
        location /api/audit/ {
            proxy_pass http://{{ include "fintech-chart.audit-service.name" . }}:{{ .Values.backend.auditService.port }}/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Static files
        location / {
            try_files $uri $uri/ /index.html;
            expires 1d;
            add_header Cache-Control "public, immutable";
        }

        # Static assets
        location /assets/ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Error pages
        error_page 404 /index.html;
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
{{- end }} 