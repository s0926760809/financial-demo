apiVersion: v1
kind: ConfigMap
metadata:
  name: postgresql-config
  namespace: fintech-demo
data:
  init.sql: |
    -- 金融微服務數據庫初始化
    CREATE DATABASE trading_db;
    CREATE DATABASE risk_db;
    CREATE DATABASE payment_db;
    CREATE DATABASE audit_db;
    
    -- 創建用戶
    CREATE USER trading_user WITH PASSWORD 'trading_pass';
    CREATE USER risk_user WITH PASSWORD 'risk_pass';
    CREATE USER payment_user WITH PASSWORD 'payment_pass';
    CREATE USER audit_user WITH PASSWORD 'audit_pass';
    
    -- 授權
    GRANT ALL PRIVILEGES ON DATABASE trading_db TO trading_user;
    GRANT ALL PRIVILEGES ON DATABASE risk_db TO risk_user;
    GRANT ALL PRIVILEGES ON DATABASE payment_db TO payment_user;
    GRANT ALL PRIVILEGES ON DATABASE audit_db TO audit_user;
    
    -- 切換到trading_db創建表
    \c trading_db;
    
    CREATE TABLE orders (
        id VARCHAR(36) PRIMARY KEY,
        user_id VARCHAR(36) NOT NULL,
        symbol VARCHAR(10) NOT NULL,
        side VARCHAR(4) NOT NULL,
        order_type VARCHAR(10) NOT NULL,
        quantity DECIMAL(18,8) NOT NULL,
        price DECIMAL(18,8),
        status VARCHAR(20) NOT NULL,
        filled_qty DECIMAL(18,8) DEFAULT 0,
        remaining_qty DECIMAL(18,8),
        avg_price DECIMAL(18,8),
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        time_in_force VARCHAR(10)
    );
    
    CREATE TABLE positions (
        id VARCHAR(36) PRIMARY KEY,
        user_id VARCHAR(36) NOT NULL,
        symbol VARCHAR(10) NOT NULL,
        quantity DECIMAL(18,8) NOT NULL,
        avg_price DECIMAL(18,8) NOT NULL,
        market_value DECIMAL(18,8),
        unrealized_pl DECIMAL(18,8),
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    );
    
    GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO trading_user;
    
    -- 切換到audit_db創建審計表
    \c audit_db;
    
    CREATE TABLE audit_logs (
        id VARCHAR(36) PRIMARY KEY,
        timestamp TIMESTAMP NOT NULL,
        service VARCHAR(50) NOT NULL,
        action VARCHAR(100) NOT NULL,
        user_id VARCHAR(36),
        resource_id VARCHAR(36),
        details JSONB,
        client_ip INET,
        user_agent TEXT,
        severity VARCHAR(20),
        status VARCHAR(20)
    );
    
    GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO audit_user;
---
apiVersion: v1
kind: Secret
metadata:
  name: postgresql-secret
  namespace: fintech-demo
type: Opaque
data:
  # postgres-password: 故意使用弱密碼 "fintech123" (base64編碼)
  postgres-password: ZmludGVjaDEyMw==
  # 各個數據庫用戶密碼
  trading-password: dHJhZGluZ19wYXNz      # trading_pass
  risk-password: cmlza19wYXNz              # risk_pass  
  payment-password: cGF5bWVudF9wYXNz      # payment_pass
  audit-password: YXVkaXRfcGFzcw==        # audit_pass
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgresql-pvc
  namespace: fintech-demo
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgresql
  namespace: fintech-demo
  labels:
    app: postgresql
    tier: database
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      labels:
        app: postgresql
        tier: database
      annotations:
        # 標記為包含敏感數據的Pod
        security.policy/sensitive-data: "true"
        tetragon.io/monitor: "database"
    spec:
      containers:
      - name: postgresql
        image: postgres:15-alpine
        ports:
        - containerPort: 5432
          name: postgresql
        env:
        - name: POSTGRES_DB
          value: "fintech_db"
        - name: POSTGRES_USER
          value: "postgres"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgresql-secret
              key: postgres-password
        # 故意暴露更多環境變量用於演示
        - name: POSTGRES_HOST_AUTH_METHOD
          value: "md5"
        - name: POSTGRES_INITDB_ARGS
          value: "--auth-local=trust --auth-host=md5"
        volumeMounts:
        - name: postgresql-storage
          mountPath: /var/lib/postgresql/data
        - name: postgresql-init
          mountPath: /docker-entrypoint-initdb.d
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        # 故意使用弱的安全上下文
        securityContext:
          allowPrivilegeEscalation: true
          runAsUser: 0  # 以root身份運行
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - postgres
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - postgres
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: postgresql-storage
        persistentVolumeClaim:
          claimName: postgresql-pvc
      - name: postgresql-init
        configMap:
          name: postgresql-config
---
apiVersion: v1
kind: Service
metadata:
  name: postgresql-service
  namespace: fintech-demo
  labels:
    app: postgresql
spec:
  type: ClusterIP
  ports:
  - port: 5432
    targetPort: 5432
    protocol: TCP
  selector:
    app: postgresql 