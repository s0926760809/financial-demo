apiVersion: v1
kind: ConfigMap
metadata:
  name: frontend-config
  namespace: fintech-demo
data:
  nginx.conf: |
    user nginx;
    worker_processes auto;
    error_log /var/log/nginx/error.log warn;
    pid /var/run/nginx.pid;
    
    events {
        worker_connections 1024;
    }
    
    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;
        
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';
        
        access_log /var/log/nginx/access.log main;
        
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;
        
        # 故意暴露服務器信息
        server_tokens on;
        
        server {
            listen 80;
            server_name localhost;
            root /usr/share/nginx/html;
            index index.html;
            
            # 故意的不安全響應頭
            add_header X-Debug-Mode "enabled";
            add_header X-API-Endpoint "http://trading-api-service:8080";
            add_header X-Build-Version "3.0.0";
            
            location / {
                try_files $uri $uri/ /index.html;
            }
            
            location /health {
                access_log off;
                return 200 "healthy\n";
                add_header Content-Type text/plain;
            }
            
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
            }
        }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: fintech-demo
  labels:
    app: frontend
    tier: presentation
spec:
  replicas: 2
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
        tier: presentation
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "80"
        prometheus.io/path: "/metrics"
        tetragon.io/monitor: "web-frontend"
        # 故意標記為包含敏感信息
        security.policy/exposed-secrets: "api-keys"
    spec:
      containers:
      - name: frontend
        image: fintech-demo/frontend:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        env:
        # 故意在環境變量中暴露敏感信息
        - name: REACT_APP_API_KEY
          value: "demo_api_key_12345"
        - name: REACT_APP_ADMIN_TOKEN
          value: "admin_token_67890"
        - name: REACT_APP_DEBUG_MODE
          value: "true"
        - name: REACT_APP_BACKEND_URLS
          value: "trading:8080,risk:8081,payment:8082,audit:8083"
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
        - name: frontend-logs
          mountPath: /var/log/nginx
        # 故意掛載敏感目錄
        - name: host-secrets
          mountPath: /host/secrets
          readOnly: true
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "250m"
        # 故意使用不安全的安全上下文
        securityContext:
          allowPrivilegeEscalation: true
          runAsUser: 0  # 以root身份運行
          capabilities:
            add:
            - NET_ADMIN  # 故意添加不必要的權限
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
        # 啟動時執行一些操作
        lifecycle:
          postStart:
            exec:
              command:
              - "/bin/sh"
              - "-c"
              - |
                echo "Frontend started at $(date)" >> /var/log/nginx/startup.log
                # 故意創建一些敏感文件
                echo "demo_api_key_12345" > /usr/share/nginx/html/api-key.txt
                echo "admin_token_67890" > /usr/share/nginx/html/admin-token.txt
                chmod 644 /usr/share/nginx/html/api-key.txt
                chmod 644 /usr/share/nginx/html/admin-token.txt
      volumes:
      - name: nginx-config
        configMap:
          name: frontend-config
      - name: frontend-logs
        emptyDir: {}
      # 故意掛載主機敏感目錄
      - name: host-secrets
        hostPath:
          path: /etc/ssl/private
          type: DirectoryOrCreate
      # 故意使用寬鬆的安全上下文
      securityContext:
        runAsUser: 0
        fsGroup: 0
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
  namespace: fintech-demo
  labels:
    app: frontend
spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: 80
    nodePort: 30300
    protocol: TCP
    name: http
  selector:
    app: frontend
---
# 故意創建過於寬鬆的網絡策略
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: frontend-netpol
  namespace: fintech-demo
spec:
  podSelector:
    matchLabels:
      app: frontend
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from: []  # 允許所有入站流量
    ports:
    - protocol: TCP
      port: 80
  egress:
  - to: []    # 允許所有出站流量 